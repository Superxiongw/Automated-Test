{"name": "test_CreateFactory[udata0]", "status": "broken", "statusDetails": {"message": "TypeError: Object of type date is not JSON serializable", "trace": "self = <ApiCase.testcases.test_CreateFactory.TestCase object at 0x000001BC89B25BA0>\nudata = {'data': {'Address': None, 'DistributorIds': [], 'FactoryId': None, 'FactoryName': 1, ...}, 'method': 'post', 'name': '创建生产厂家', 'parmams_type': 'json', ...}\n\n    @pytest.mark.parametrize('udata',read_yaml('/Base_CreateFactory.yaml'))\n    def test_CreateFactory(self,udata):\n        Token = YamlUtil().read_extract_yaml('Token')\n        print(Token)\n        url=udata['url']\n        hearder = {'authorzation':Token}\n        data=udata['data']\n        # 关闭https校验请求\n        requests.packages.urllib3.disable_warnings()\n>       res = HttpClient().send_request(method=udata['method'],url=url,param_type=udata['parmams_type'],data=data,headers=hearder,verify=False)\n\nApiCase\\testcases\\test_CreateFactory.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nApiCase\\common\\httpclient.py:24: in send_request\n    response=self.session.request(method=method, url=url, json=data,**kwargs)\nvenv\\lib\\site-packages\\requests\\sessions.py:515: in request\n    prep = self.prepare_request(req)\nvenv\\lib\\site-packages\\requests\\sessions.py:443: in prepare_request\n    p.prepare(\nvenv\\lib\\site-packages\\requests\\models.py:321: in prepare\n    self.prepare_body(data, files, json)\nvenv\\lib\\site-packages\\requests\\models.py:473: in prepare_body\n    body = complexjson.dumps(json, allow_nan=False)\n..\\JetBrains\\Python\\Python3.10\\lib\\json\\__init__.py:238: in dumps\n    **kw).encode(obj)\n..\\JetBrains\\Python\\Python3.10\\lib\\json\\encoder.py:199: in encode\n    chunks = self.iterencode(o, _one_shot=True)\n..\\JetBrains\\Python\\Python3.10\\lib\\json\\encoder.py:257: in iterencode\n    return _iterencode(o, 0)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.encoder.JSONEncoder object at 0x000001BC89B26950>\no = datetime.date(2022, 7, 4)\n\n    def default(self, o):\n        \"\"\"Implement this method in a subclass such that it returns\n        a serializable object for ``o``, or calls the base implementation\n        (to raise a ``TypeError``).\n    \n        For example, to support arbitrary iterators, you could\n        implement default like this::\n    \n            def default(self, o):\n                try:\n                    iterable = iter(o)\n                except TypeError:\n                    pass\n                else:\n                    return list(iterable)\n                # Let the base class default method raise the TypeError\n                return JSONEncoder.default(self, o)\n    \n        \"\"\"\n>       raise TypeError(f'Object of type {o.__class__.__name__} '\n                        f'is not JSON serializable')\nE       TypeError: Object of type date is not JSON serializable\n\n..\\JetBrains\\Python\\Python3.10\\lib\\json\\encoder.py:179: TypeError"}, "parameters": [{"name": "udata", "value": "{'name': '创建生产厂家', 'url': 'https://mahtest.sendi.com/Base_Factory/CreateFactory', 'method': 'post', 'parmams_type': 'json', 'data': {'LoginUserId': 1543185603062009856, 'LoginCompanyId': 1499568155075416064, 'Identity': 1, 'FactoryId': None, 'FactoryName': 1, 'FactoryNumber': 1, 'SocialCreditCode': 1, 'LicenseNumber': 1, 'LicenseExpireTime': datetime.date(2022, 7, 4), 'LicenseFileList': [{'FileName': '测试用图片.png', 'ResourceId': '1543894739793874944'}], 'Address': None, 'DistributorIds': [], 'Remark': 'ces'}}"}], "start": 1656928507473, "stop": 1656928507475, "uuid": "eeebe10e-5470-4ca6-8363-910914b7fbaa", "historyId": "4045a45f7ecf82245a276bd3010f5c99", "testCaseId": "ed4cffeec8626de89f0f00693e95c65d", "fullName": "ApiCase.testcases.test_CreateFactory.TestCase#test_CreateFactory", "labels": [{"name": "parentSuite", "value": "ApiCase.testcases"}, {"name": "suite", "value": "test_CreateFactory"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "DESKTOP-A7BU5D9"}, {"name": "thread", "value": "4740-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ApiCase.testcases.test_CreateFactory"}]}