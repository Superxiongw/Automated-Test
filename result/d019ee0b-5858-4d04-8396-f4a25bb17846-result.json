{"name": "test_ConfirmAgreement[udata0]", "status": "broken", "statusDetails": {"message": "TypeError: TestCase.test_GetAgreementList() missing 2 required positional arguments: 'self' and 'udata'", "trace": "self = <ApiCase.testcases.test_SystemCompany.TestCase object at 0x000001D21191CA00>\nudata = {'data': {'AgreementId': '1549578221530517504', 'Identity': 2, 'IsPassed': False, 'LoginCompanyId': '1499568389096607744', ...}, 'method': 'post', 'parmams_type': 'json', 'url': 'https://mahtest.sendi.com/System_Company/ConfirmAgreement'}\n\n    @pytest.mark.run(order=3)\n    # @pytest.mark.skip(reason=\"跳过确认委托协议\")\n    @pytest.mark.parametrize('udata', read_yaml('/System_Company/Company_ConfirmAgreement.yaml'))\n    def test_ConfirmAgreement(self,udata):\n        url = udata['url']\n        herders = {\"authorization\": TestCase.Token1}\n        data = udata['data']\n        # 关闭https校验请求\n        requests.packages.urllib3.disable_warnings()\n        res = HttpClient().send_request(url=url, param_type=udata['parmams_type'], method=udata['method'], data=data,\n                                        headers=herders, verify=False)\n        logger.debug(f'确认委托协议信息：{res}')\n        print('-----------------------确认委托协议信息-----------------------')\n        print(res.json())\n        # assert res.status_code == 200\n        assert res.json()[\"Code\"] == 100\n>       res1 = TestCase.test_GetAgreementList()\nE       TypeError: TestCase.test_GetAgreementList() missing 2 required positional arguments: 'self' and 'udata'\n\nApiCase\\testcases\\test_SystemCompany.py:63: TypeError"}, "attachments": [{"name": "log", "source": "704e8ef1-c7a1-44fa-bb0c-d33e5fb8e32d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "udata", "value": "{'url': 'https://mahtest.sendi.com/System_Company/ConfirmAgreement', 'method': 'post', 'parmams_type': 'json', 'data': {'AgreementId': '1549578221530517504', 'IsPassed': False, 'Opinion': '重新确认', 'Identity': 2, 'LoginUserId': '1540279897740677120', 'LoginCompanyId': '1499568389096607744'}}"}], "start": 1658385854927, "stop": 1658385855327, "uuid": "e0a86c72-b456-434c-b698-b3bd81156798", "historyId": "22cacf3c047563084983592dbfbcf910", "testCaseId": "2b48c9e91d0fddd458a15e9a1711e561", "fullName": "ApiCase.testcases.test_SystemCompany.TestCase#test_ConfirmAgreement", "labels": [{"name": "tag", "value": "run(order=3)"}, {"name": "parentSuite", "value": "ApiCase.testcases"}, {"name": "suite", "value": "test_SystemCompany"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "DESKTOP-A7BU5D9"}, {"name": "thread", "value": "32-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ApiCase.testcases.test_SystemCompany"}]}