{
  "uid" : "a9feb41c3ae72941",
  "name" : "test_CreateAgreement[udata0]",
  "fullName" : "ApiCase.testcases.test_SystemCompany.TestCase#test_CreateAgreement",
  "historyId" : "fe0fe6b9c7d982464df8b08f05560211",
  "time" : {
    "start" : 1658285428694,
    "stop" : 1658285429306,
    "duration" : 612
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '参数错误' == '成功'\n  - 成功\n  + 参数错误",
  "statusTrace" : "self = <ApiCase.testcases.test_SystemCompany.TestCase object at 0x000001E94FCEE590>\nudata = {'data': {'AgreementFileList': [{'FileName': '委托协议文件Test.docx', 'ResourceId': '1549313299668144128'}], 'AgreementNumbe...Time': '2022-07-19', 'ExpireTime': '2022-07-20', ...}, 'method': 'post', 'name': '产品id为空', 'parmams_type': 'json', ...}\n\n    @pytest.mark.run(order=1)\n    # @pytest.mark.skip(reason=\"跳过新增委托协议\")\n    @pytest.mark.parametrize('udata', read_yaml('/System_Company/Company_CreateAgreement.yaml'))\n    def test_CreateAgreement(self,udata):\n        herders = {\"authorization\": TestCase.Token}\n        res = common.CreateAgreement(udata,herders)\n        print(res.json())\n>       assert res.json()['Msg'] == \"成功\"\nE       AssertionError: assert '参数错误' == '成功'\nE         - 成功\nE         + 参数错误\n\nApiCase\\testcases\\test_SystemCompany.py:43: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 1,
  "retriesStatusChange" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '参数错误' == '成功'\n  - 成功\n  + 参数错误",
    "statusTrace" : "self = <ApiCase.testcases.test_SystemCompany.TestCase object at 0x000001E94FCEE590>\nudata = {'data': {'AgreementFileList': [{'FileName': '委托协议文件Test.docx', 'ResourceId': '1549313299668144128'}], 'AgreementNumbe...Time': '2022-07-19', 'ExpireTime': '2022-07-20', ...}, 'method': 'post', 'name': '产品id为空', 'parmams_type': 'json', ...}\n\n    @pytest.mark.run(order=1)\n    # @pytest.mark.skip(reason=\"跳过新增委托协议\")\n    @pytest.mark.parametrize('udata', read_yaml('/System_Company/Company_CreateAgreement.yaml'))\n    def test_CreateAgreement(self,udata):\n        herders = {\"authorization\": TestCase.Token}\n        res = common.CreateAgreement(udata,herders)\n        print(res.json())\n>       assert res.json()['Msg'] == \"成功\"\nE       AssertionError: assert '参数错误' == '成功'\nE         - 成功\nE         + 参数错误\n\nApiCase\\testcases\\test_SystemCompany.py:43: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d1520e8f89649f5e",
      "name" : "log",
      "source" : "d1520e8f89649f5e.txt",
      "type" : "text/plain",
      "size" : 75
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "tag",
    "value" : "run(order=1)"
  }, {
    "name" : "parentSuite",
    "value" : "ApiCase.testcases"
  }, {
    "name" : "suite",
    "value" : "test_SystemCompany"
  }, {
    "name" : "subSuite",
    "value" : "TestCase"
  }, {
    "name" : "host",
    "value" : "DESKTOP-A7BU5D9"
  }, {
    "name" : "thread",
    "value" : "11220-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "ApiCase.testcases.test_SystemCompany"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "udata",
    "value" : "{'name': '产品id为空', 'url': 'https://mahtest.sendi.com/System_Company/CreateAgreement', 'method': 'post', 'parmams_type': 'json', 'data': {'ProductId': None, 'TrusteeId': 1499568389096607744, 'AgreementNumber': 'xy220719', 'EffectTime': '2022-07-19', 'ExpireTime': '2022-07-20', 'Remark': 'Test20220719', 'AgreementFileList': [{'ResourceId': '1549313299668144128', 'FileName': '委托协议文件Test.docx'}], 'QualityFileList': [{'ResourceId': '1549313339488866304', 'FileName': '质量协议文件Test.docx'}], 'Identity': 1, 'LoginUserId': 1543185603062009856, 'LoginCompanyId': 1499568155075416064}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "ddc2669e33fb3a77",
      "status" : "passed",
      "time" : {
        "start" : 1658222203743,
        "stop" : 1658222204240,
        "duration" : 497
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=1)" ]
  },
  "source" : "a9feb41c3ae72941.json",
  "parameterValues" : [ "{'name': '产品id为空', 'url': 'https://mahtest.sendi.com/System_Company/CreateAgreement', 'method': 'post', 'parmams_type': 'json', 'data': {'ProductId': None, 'TrusteeId': 1499568389096607744, 'AgreementNumber': 'xy220719', 'EffectTime': '2022-07-19', 'ExpireTime': '2022-07-20', 'Remark': 'Test20220719', 'AgreementFileList': [{'ResourceId': '1549313299668144128', 'FileName': '委托协议文件Test.docx'}], 'QualityFileList': [{'ResourceId': '1549313339488866304', 'FileName': '质量协议文件Test.docx'}], 'Identity': 1, 'LoginUserId': 1543185603062009856, 'LoginCompanyId': 1499568155075416064}}" ]
}